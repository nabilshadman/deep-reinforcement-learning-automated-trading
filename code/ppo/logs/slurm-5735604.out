Loading python/3.10.8-gpu
  Loading requirement: nvidia/nvhpc-nompi/22.2 gcc/10.2.0
    openmpi/4.1.6-cuda-11.6

 ==================== 

PPO Trader - Training Mode

 ==================== 

Using device: cuda:0 

ActorNetwork(
  (actor): Sequential(
    (0): Linear(in_features=7, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=256, bias=True)
    (3): ReLU()
    (4): Linear(in_features=256, out_features=27, bias=True)
    (5): Softmax(dim=-1)
  )
) 
 
 CriticNetwork(
  (critic): Sequential(
    (0): Linear(in_features=7, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=256, bias=True)
    (3): ReLU()
    (4): Linear(in_features=256, out_features=1, bias=True)
  )
) 

episode: 1/4, episode end value: 89.25, duration: 0:00:01.922342
episode: 2/4, episode end value: 445.37, duration: 0:00:01.116592
episode: 3/4, episode end value: 28304.40, duration: 0:00:01.102725
episode: 4/4, episode end value: 31383.77, duration: 0:00:01.102093
... saving models ...

 ==================== 

PPO Trader - Testing Mode

 ==================== 

Using device: cuda:0 

ActorNetwork(
  (actor): Sequential(
    (0): Linear(in_features=7, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=256, bias=True)
    (3): ReLU()
    (4): Linear(in_features=256, out_features=27, bias=True)
    (5): Softmax(dim=-1)
  )
) 
 
 CriticNetwork(
  (critic): Sequential(
    (0): Linear(in_features=7, out_features=256, bias=True)
    (1): ReLU()
    (2): Linear(in_features=256, out_features=256, bias=True)
    (3): ReLU()
    (4): Linear(in_features=256, out_features=1, bias=True)
  )
) 

... loading models ...
episode: 1/4, episode end value: 21378.37, duration: 0:00:01.333369
episode: 2/4, episode end value: 20864.30, duration: 0:00:00.794015
episode: 3/4, episode end value: 20858.60, duration: 0:00:00.789806
episode: 4/4, episode end value: 21379.43, duration: 0:00:00.789789
